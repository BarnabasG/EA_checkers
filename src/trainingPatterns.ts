import { SelectionMethod, TrainingPatterns, WeightInit } from "./types";

export const STANDARD_TRAINING_PATTERNS: TrainingPatterns = {

    'Experiment1': {
        999: {test: true, popWeightInit: WeightInit.RANDOM, generations: 30, generationParams: {learningRate: 0.35, randPercent: 10, keepTopPercent: 5, selectionMethod: SelectionMethod.ROULETTE}},
        0:  {depth:2, populationSize:200, competitionType: 1, matchCount: 10},
        1:  {depth:2, populationSize:100, competitionType: 1, matchCount: 15},
        2:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15},
        3:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15, generationParams: {learningRate: 0.25}},
        4:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15, generationParams: {learningRate: 0.25}},
        5:  {depth:3, populationSize:150, competitionType: 1, matchCount: 20, generationParams: {learningRate: 0.25}},
        6:  {depth:3, populationSize:75, competitionType: 0, generationParams: {learningRate: 0.2}},
        7:  {depth:3, populationSize:60, competitionType: 0, generationParams: {learningRate: 0.2}},
        8:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.2}},
        9:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.2}},
        10: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.2}},
        11: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        12: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        13: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        14: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        15: {depth:6, populationSize:40, competitionType: 0, generationParams: {learningRate: 0.1}},
    },

    'Experiment2': {
        999: {test: true, popWeightInit: WeightInit.RANDOM, generations: 30, generationParams: {learningRate: 0.3, randPercent: 10, keepTopPercent: 10, selectionMethod: SelectionMethod.TOURNAMENT, tournamentSize: 5}},
        0:  {depth:3, populationSize:75, competitionType: 0},
        1:  {depth:3, populationSize:75, competitionType: 0},
        2:  {depth:3, populationSize:75, competitionType: 0},
        3:  {depth:3, populationSize:75, competitionType: 0, generationParams: {learningRate: 0.25}},
        4:  {depth:3, populationSize:75, competitionType: 0, generationParams: {learningRate: 0.25}},
        5:  {depth:3, populationSize:75, competitionType: 0, generationParams: {learningRate: 0.25}},
        6:  {depth:3, populationSize:75, competitionType: 0, generationParams: {learningRate: 0.2}},
        7:  {depth:3, populationSize:60, competitionType: 0, generationParams: {learningRate: 0.2}},
        8:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.2}},
        9:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        10: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        11: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        12: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        13: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.075}},
        14: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.075}},
        15: {depth:6, populationSize:40, competitionType: 0, generationParams: {learningRate: 0.075}},
    },


    'Experiment3': {
        999: {test: true, popWeightInit: WeightInit.RANDOMPOSITIVE, generations: 30, generationParams: {learningRate: 0.25, randPercent: 5, keepTopPercent: 10, selectionMethod: SelectionMethod.RANK, rankBias: 2}},
        0:  {depth:2, populationSize:400, competitionType: 1, matchCount: 8},
        1:  {depth:2, populationSize:200, competitionType: 1, matchCount: 10},
        2:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15},
        3:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15, generationParams: {learningRate: 0.15}},
        4:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15, generationParams: {learningRate: 0.15}},
        5:  {depth:3, populationSize:150, competitionType: 1, matchCount: 20, generationParams: {learningRate: 0.15}},
        6:  {depth:3, populationSize:75, competitionType: 0, generationParams: {learningRate: 0.1}},
        7:  {depth:3, populationSize:60, competitionType: 0, generationParams: {learningRate: 0.1}},
        8:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        9:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        10: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        11: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.075}},
        12: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.075}},
        13: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.075}},
        14: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.075}},
        15: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        16: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        17: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        18: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
    },

    'testPattern': {
        999: {test: true, popWeightInit: WeightInit.RANDOMPOSITIVE, generations: 4, generationParams: {learningRate: 0.25, randPercent: 5, keepTopPercent: 10, selectionMethod: SelectionMethod.RANK, rankBias: 2}},
        0:  {depth:2, populationSize:400, competitionType: 1, matchCount: 8, test: false, generationParams: {learningRate: 0.15, selectionMethod: SelectionMethod.TOURNAMENT, keepTopPercent: 15}},
        1:  {depth:3, populationSize:200, competitionType: 1, matchCount: 10, test: false,},
        2:  {depth:3, populationSize:50, competitionType: 0, test: false, generationParams: {learningRate: 0.15, selectionMethod: SelectionMethod.ROULETTE}},
        3:  {depth:3, populationSize:40, competitionType: 0, generationParams: {learningRate: 0.15, selectionMethod: SelectionMethod.TOURNAMENT, randPercent: 10}},
    },


    '50Gens': {
        999: {test: false, popWeightInit: WeightInit.TRAINED, generations: 50, generationParams: {learningRate: 0.3, randPercent: 5, keepTopPercent: 15, selectionMethod: 3, rankBias: 2}},
        0:  {depth:2, populationSize:400, competitionType: 1, matchCount: 8, test: true},
        1:  {depth:2, populationSize:200, competitionType: 1, matchCount: 10},
        2:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15},
        3:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15, generationParams: {learningRate: 0.25}},
        4:  {depth:2, populationSize:200, competitionType: 1, matchCount: 15, generationParams: {learningRate: 0.25}},
        5:  {depth:2, populationSize:150, competitionType: 1, matchCount: 20, generationParams: {learningRate: 0.2}, test: true},
        6:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        7:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.15}},
        8:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        9:  {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        10: {depth:3, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}, test: true},
        11: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        12: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        13: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        14: {depth:4, populationSize:50, competitionType: 0, generationParams: {learningRate: 0.1}},
        15: {depth:4, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.075}, test: true},
        16: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.075}},
        17: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.075}},
        18: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.075}},
        19: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.075}},
        20: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.075}, test: true},
        21: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        22: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        23: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        24: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        25: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}, test: true},
        26: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        27: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        28: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        29: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        30: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}, test: true},
        31: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        32: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        33: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        34: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        35: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}, test: true},
        36: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        37: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        38: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        39: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        40: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}, test: true},
        41: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        42: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        43: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        44: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        45: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}, test: true},
        46: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        47: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        48: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        49: {depth:6, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}},
        50: {depth:7, populationSize:30, competitionType: 0, generationParams: {learningRate: 0.05}, test: true},
    },
}